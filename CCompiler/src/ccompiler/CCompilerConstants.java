/* Generated By:JavaCC: Do not edit this line. CCompilerConstants.java */
package ccompiler;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface CCompilerConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int LINE_COMMIT = 6;
  /** RegularExpression Id. */
  int BLOCK_COMMIT = 9;
  /** RegularExpression Id. */
  int SEMIC = 10;
  /** RegularExpression Id. */
  int COMMA = 11;
  /** RegularExpression Id. */
  int ASSIGN = 12;
  /** RegularExpression Id. */
  int LBR = 13;
  /** RegularExpression Id. */
  int RBR = 14;
  /** RegularExpression Id. */
  int RCBR = 15;
  /** RegularExpression Id. */
  int LCBR = 16;
  /** RegularExpression Id. */
  int PLUS = 17;
  /** RegularExpression Id. */
  int MINUS = 18;
  /** RegularExpression Id. */
  int MULT = 19;
  /** RegularExpression Id. */
  int DIV = 20;
  /** RegularExpression Id. */
  int MOD = 21;
  /** RegularExpression Id. */
  int INC = 22;
  /** RegularExpression Id. */
  int DEC = 23;
  /** RegularExpression Id. */
  int EXLM = 24;
  /** RegularExpression Id. */
  int LOGIC_EQUAL = 25;
  /** RegularExpression Id. */
  int LOGIC_NOT = 26;
  /** RegularExpression Id. */
  int LOGIC_AND = 27;
  /** RegularExpression Id. */
  int LOGIC_OR = 28;
  /** RegularExpression Id. */
  int LEFT = 29;
  /** RegularExpression Id. */
  int RIGHT = 30;
  /** RegularExpression Id. */
  int LEFT_EQUAL = 31;
  /** RegularExpression Id. */
  int RIGHT_EQUAL = 32;
  /** RegularExpression Id. */
  int BOOL = 33;
  /** RegularExpression Id. */
  int DO = 34;
  /** RegularExpression Id. */
  int ELSE = 35;
  /** RegularExpression Id. */
  int IF = 36;
  /** RegularExpression Id. */
  int INT = 37;
  /** RegularExpression Id. */
  int FLOAT = 38;
  /** RegularExpression Id. */
  int DOUBLE = 39;
  /** RegularExpression Id. */
  int RETURN = 40;
  /** RegularExpression Id. */
  int STRING = 41;
  /** RegularExpression Id. */
  int VOID = 42;
  /** RegularExpression Id. */
  int CHAR = 43;
  /** RegularExpression Id. */
  int WHILE = 44;
  /** RegularExpression Id. */
  int IDENTIFIER = 45;
  /** RegularExpression Id. */
  int INT_VALUE = 46;
  /** RegularExpression Id. */
  int FLOAT_VALUE = 47;
  /** RegularExpression Id. */
  int DOUBLE_VALUE = 48;
  /** RegularExpression Id. */
  int BOOL_VALUE = 49;
  /** RegularExpression Id. */
  int STRING_VALUE = 54;
  /** RegularExpression Id. */
  int CHAR_VALUE = 59;
  /** RegularExpression Id. */
  int OTHER = 60;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int IN_BLOCK_COMMIT = 1;
  /** Lexical state. */
  int IN_STRING = 2;
  /** Lexical state. */
  int IN_CHARACTER = 3;
  /** Lexical state. */
  int CHARACTER_TERM = 4;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\f\"",
    "<LINE_COMMIT>",
    "\"/*\"",
    "<token of kind 8>",
    "\"*/\"",
    "\";\"",
    "\",\"",
    "\"=\"",
    "\"(\"",
    "\")\"",
    "\"}\"",
    "\"{\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"%\"",
    "\"++\"",
    "\"--\"",
    "\"!\"",
    "\"==\"",
    "\"!=\"",
    "\"&&\"",
    "\"||\"",
    "\"<\"",
    "\">\"",
    "\"<=\"",
    "\">=\"",
    "\"bool\"",
    "\"do\"",
    "\"else\"",
    "\"if\"",
    "\"int\"",
    "\"float\"",
    "\"double\"",
    "\"return\"",
    "\"string\"",
    "\"void\"",
    "\"char\"",
    "\"while\"",
    "<IDENTIFIER>",
    "<INT_VALUE>",
    "<FLOAT_VALUE>",
    "<DOUBLE_VALUE>",
    "<BOOL_VALUE>",
    "\"\\\"\"",
    "<token of kind 51>",
    "<token of kind 52>",
    "<token of kind 53>",
    "\"\\\"\"",
    "\"\\\'\"",
    "<token of kind 56>",
    "<token of kind 57>",
    "<token of kind 58>",
    "\"\\\'\"",
    "<OTHER>",
  };

}
